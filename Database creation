title: "CFB Predictor"
author: "Quinn Schroeder"
date: "9/18/2021"
output:
  pdf_document: default
  html_document: default
---

# Load in libraries 
```{r}
library(ALSM)
library(car)
library(onewaytests)
library(MASS)
library(lmridge)
library(caret)
library(dplyr)
library(pacman)
library(ggplot2)
library(rvest)
library(plyr)
library(stringr)
library(randomForest)
```

# Make Database 2000-2020 Training Data
```{r}
# Scrape Data for Building Model

#Offense Stats
years = c(2000:2020)
urls = list()
for (i in 1:length(years)) {
  url = paste0('https://www.sports-reference.com/cfb/years/', years[i],'-team-offense.html')
  urls[[i]] = url
}

tbl = list()
years = 2000
j = 1
for (j in seq_along(urls)) {
  tbl[[j]] = urls[[j]] %>%
    read_html() %>%
    html_node("table") %>%
    html_table() 
  tbl[[j]]$Year = years
  years = years+1
}

Offense = ldply(tbl, data.frame)

names(Offense) <- as.matrix(Offense[1,])
Offense <- Offense[-1,]
Offense[] <- lapply(Offense, function(x) type.convert(as.character(x)))

names(Offense)[names(Offense) == "2000"] <- "Year"
Offense$Season <- paste(Offense$School, Offense$Year, sep=" ")
Offense$PassCompletions <- Offense[,5]
Offense$PassAtt <- Offense[,6]
Offense$CompletionPer <- Offense[,7]
Offense$PassYrds <- Offense[,8]
Offense$PassTD <- Offense[,9]
Offense$RushAtt <- Offense[,10]
Offense$RushYrds <- Offense[,11]
Offense$RushAvg <- Offense[,12]
Offense$RushTD <- Offense[,13]
Offense$TotYrds <- Offense[,15]
Offense$YPP <- Offense[,16]   # Yards per play
Offense$PassFirstDwns <- Offense[,17]
Offense$RushFirstDwns <- Offense[,18]
Offense$PenFirstDwns <- Offense[,19]
Offense$TotFirstDwns <- Offense[,20]
Offense$Pens <- Offense[,21]
Offense$PenYrds <- Offense[,22]
Offense$Tov <- Offense[,25]

Offense <- Offense[,c(27,2,26,3,4,14,28:44,24,23,45)]

#Defense Stats
years = c(2000:2020)
urls = list()
for (i in 1:length(years)) {
  url = paste0('https://www.sports-reference.com/cfb/years/', years[i],'-team-defense.html')
  urls[[i]] = url
}

tbl = list()
years = 2000
j = 1
for (j in seq_along(urls)) {
  tbl[[j]] = urls[[j]] %>%
    read_html() %>%
    html_node("table") %>%
    html_table() 
  tbl[[j]]$Year = years
  years = years+1
}

Defense = ldply(tbl, data.frame)

names(Defense) <- as.matrix(Defense[1,])
Defense <- Defense[-1,]
Defense[] <- lapply(Defense, function(x) type.convert(as.character(x)))

names(Defense)[names(Defense) == "2000"] <- "Year"
Defense$OppSeason <- paste(Defense$School, Defense$Year, sep=" ")
Defense$Season <- paste(Defense$School, Defense$Year, sep=" ")

Defense$PAPG <- Defense[,4]
Defense$O_PassCompletions <- Defense[,5]
Defense$O_PassAtt <- Defense[,6]
Defense$O_CompletionPer <- Defense[,7]
Defense$O_PassYrds <- Defense[,8]
Defense$O_PassTD <- Defense[,9]
Defense$O_RushAtt <- Defense[,10]
Defense$O_RushYrds <- Defense[,11]
Defense$O_RushAvg <- Defense[,12]
Defense$O_RushTD <- Defense[,13]
Defense$O_TotYrds <- Defense[,15]
Defense$O_YPP <- Defense[,16] # Opponent Yards Per Play
Defense$O_PassFirstDowns <- Defense[,17]
Defense$O_RushFirstDowns <- Defense[,18]
Defense$O_PenFirstDowns <- Defense[,19]
Defense$O_TotFirstDowns <- Defense[,20]
Defense$O_Pens <- Defense[,21]
Defense$O_PenYrds <- Defense[,22]
Defense$O_Fum <- Defense[,23]
Defense$O_Int <- Defense[,24]
Defense$O_Tov <- Defense[,25]

Defense <- Defense[,c(27,28,2,26,29:48)]

#Special Teams Stats
years = c(2000:2020)
urls = list()
for (i in 1:length(years)) {
  url = paste0('https://www.sports-reference.com/cfb/years/', years[i],'-special-teams.html')
  urls[[i]] = url
}

tbl = list()
years = 2000
j = 1
for (j in seq_along(urls)) {
  tbl[[j]] = urls[[j]] %>%
    read_html() %>%
    html_node("table") %>%
    html_table() 
  tbl[[j]]$Year = years
  years = years+1
}

SpecialTm = ldply(tbl, data.frame)

names(SpecialTm) <- as.matrix(SpecialTm[1,])
SpecialTm <- SpecialTm[-1,]
SpecialTm[] <- lapply(SpecialTm, function(x) type.convert(as.character(x)))

names(SpecialTm)[names(SpecialTm) == "2000"] <- "Year"

SpecialTm$Season <- paste(SpecialTm$School, SpecialTm$Year, sep=" ")

SpecialTm$KO_Returns <- SpecialTm[,14] 
SpecialTm$KO_ReturnYrd <- SpecialTm[,15] 
SpecialTm$KO_ReturnAvg <- SpecialTm[,16] 
SpecialTm$KO_ReturnTD <- SpecialTm[,17] 
SpecialTm$Punt_Returns <- SpecialTm[,18] 
SpecialTm$Punt_ReturnYrd <- SpecialTm[,19]
SpecialTm$Punt_ReturnAvg <- SpecialTm[,20]
SpecialTm$Punt_ReturnTD <- SpecialTm[,21]

SpecialTm <- SpecialTm[,-c(1,3,14:21)]

# Merge into Datasets to use for team and opponent projections
CFB_Tm = join(Offense,SpecialTm, by = 'Season', type = 'left', match = 'first')
CFB_Opp = join(Defense,SpecialTm, by = 'Season', type = 'left', match = 'first')

CFB_Tm <- CFB_Tm[!grepl("Passing", CFB_Tm$PassAtt),]
CFB_Tm <- CFB_Tm[!grepl("School", CFB_Tm$School),]
CFB_Opp <- CFB_Opp[!grepl("Passing", CFB_Opp$O_PassAtt),]
CFB_Opp <- CFB_Opp[!grepl("School", CFB_Opp$School),]

CFB_Tm <- CFB_Tm[,c(1:26,28:37,39:46)]
CFB_Opp <- CFB_Opp[,c(2:24,26:35,37:44)]

names(CFB_Tm)[names(CFB_Tm) == "Pts.1"] <- "KickingPts"
names(CFB_Tm)[names(CFB_Tm) == "Avg"] <- "PuntAvg"

names(CFB_Opp)[names(CFB_Opp) == "XPM"] <- "O_XPM"
names(CFB_Opp)[names(CFB_Opp) == "XPA"] <- "O_XPA"
names(CFB_Opp)[names(CFB_Opp) == "XP%"] <- "O_XP%"
names(CFB_Opp)[names(CFB_Opp) == "FGM"] <- "O_FGM"
names(CFB_Opp)[names(CFB_Opp) == "FGA"] <- "O_FGA"
names(CFB_Opp)[names(CFB_Opp) == "FG%"] <- "O_FG%"
names(CFB_Opp)[names(CFB_Opp) == "Pts"] <- "O_KickingPts"
names(CFB_Opp)[names(CFB_Opp) == "Punts"] <- "O_Punts"
names(CFB_Opp)[names(CFB_Opp) == "Yds"] <- "O_PuntYds"
names(CFB_Opp)[names(CFB_Opp) == "Avg"] <- "O_PuntAvg"
names(CFB_Opp)[names(CFB_Opp) == "KO_Returns"] <- "O_KO_Returns"
names(CFB_Opp)[names(CFB_Opp) == "KO_ReturnYrd"] <- "O_KO_ReturnYrd"
names(CFB_Opp)[names(CFB_Opp) == "KO_ReturnAvg"] <- "O_KO_ReturnAvg"
names(CFB_Opp)[names(CFB_Opp) == "KO_ReturnTD"] <- "O_KO_ReturnTD"
names(CFB_Opp)[names(CFB_Opp) == "Punt_Returns"] <- "O_Punt_Returns"
names(CFB_Opp)[names(CFB_Opp) == "Punt_ReturnYrd"] <- "O_Punt_ReturnYrd"
names(CFB_Opp)[names(CFB_Opp) == "Punt_ReturnAvg"] <- "O_Punt_ReturnAvg"
names(CFB_Opp)[names(CFB_Opp) == "Punt_ReturnTD"] <- "O_Punt_ReturnTD"

rm(Defense,Offense,SpecialTm,tbl,urls)

# Scrape Schedule
years = c(2000:2020)
urls = list()
for (i in 1:length(years)) {
  url = paste0('https://www.sports-reference.com/cfb/years/', years[i],'-schedule.html')
  urls[[i]] = url
}

tbl = list()
years = 2000
j = 1
for (j in seq_along(urls)) {
  tbl[[j]] = urls[[j]] %>%
    read_html() %>%
    html_node("table") %>%
    html_table() 
  tbl[[j]]$Year = years
  years = years+1
}

Schedule = ldply(tbl, data.frame)

Schedule <- Schedule %>%
  select("Winner","Pts","Loser","Pts.1","Year")
temp <- Schedule %>%
  select("Loser","Pts.1","Winner","Year")

names(Schedule)[names(Schedule) == "Winner"] <- "Team"
names(Schedule)[names(Schedule) == "Pts"] <- "aP"
names(Schedule)[names(Schedule) == "Loser"] <- "Opp"
names(temp)[names(temp) == "Loser"] <- "Team"
names(temp)[names(temp) == "Pts.1"] <- "aP"
names(temp)[names(temp) == "Winner"] <- "Opp"

Schedule <- Schedule[,-4]

Schedule <- rbind(Schedule, temp)

Schedule$Team <- str_replace_all(Schedule$Team, "[:digit:]", "")
Schedule$Team <- str_replace_all(Schedule$Team, "[()]", "")
Schedule$Team <- str_trim(Schedule$Team)
Schedule$Team <- str_replace_all(Schedule$Team, "Miami OH", "Miami (OH)")
Schedule$Team <- str_replace_all(Schedule$Team, "Miami FL", "Miami (FL)")

Schedule$Opp <- str_replace_all(Schedule$Opp, "[:digit:]", "")
Schedule$Opp <- str_replace_all(Schedule$Opp, "[()]", "")
Schedule$Opp <- str_trim(Schedule$Opp)
Schedule$Opp <- str_replace_all(Schedule$Opp, "Miami OH", "Miami (OH)")
Schedule$Opp <- str_replace_all(Schedule$Opp, "Miami FL", "Miami (FL)")

Schedule <- Schedule[!grepl("Winner", Schedule$Team),]
Schedule <- Schedule[!grepl("Loser", Schedule$Team),]

Schedule$Season <- paste(Schedule$Team, Schedule$Year, sep=" ")
Schedule$OppSeason <- paste(Schedule$Opp, Schedule$Year, sep=" ")

rm(temp,i,j,tbl,urls,url,years)

# Combine Stats and Schedule

Final <- join(Schedule,CFB_Tm, by = 'Season', type = 'left', match = 'all')
Final <- join(Final,CFB_Opp, by = 'OppSeason', type = 'left', match = 'all')

Final <- Final[,-c(5:9,50:51)]
Final <- Final[complete.cases(Final),]

# Write into saved database to limit later run time
write.csv(Final, "C:\\Users\\qschr\\OneDrive\\Desktop\\NCAA\\CFB.csv", row.names = TRUE)
```
